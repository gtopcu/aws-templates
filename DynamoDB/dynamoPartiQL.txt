
------------------------------------------------------------------------------------------------------------------------

SELECT * FROM "CUSTOMER_DATA_SRC_DATA"
WHERE "status" = 'READY_TO_PROCESS'
  AND "creation_datetime" > '2025-07-24T15:00:00Z'

UPDATE "CUSTOMER_DATA_SRC_DATA"
SET "status" = 'FORCE_REPROCESS'
WHERE "PK" = '7756a33b-97fc-425b-980a-e6cc1e2e93b2'
  AND "SK" = 'DataSource:1424aaef-9963-4bc1-bc58-a7bc670f42e8'

UPDATE "CUSTOMER_DATA_SRC_DATA"
SET "status" = 'FORCE_REPROCESS'
WHERE "status" = 'READY_TO_PROCESS'
  AND "creation_datetime" > '2025-07-24T15:00:00Z'
  
------------------------------------------------------------------------------------------------------------------------

SELECT * 
FROM "GLOBAL_CONSTANTS_DATA" 
WHERE "PK" = 'ConversionFactor' 
  AND begins_with("SK", 'EMPLOYEE_COMMUTING_LAND')
  AND scope = 1

UPDATE "COMPANY_DATA"
SET ownership_status = CASE 
    WHEN ownership_status = '0' THEN 'A'
    WHEN ownership_status = '1' THEN 'B'
    ELSE 'C'
END
WHERE ownership_status IN ('0', '1') OR ownership_status IS NULL OR ownership_status NOT IN ('0', '1')


# Same thing using boto3
import boto3
from boto3.dynamodb.conditions import Key, Attr

def update_boto3():
    dynamodb = boto3.resource('dynamodb')
    table = dynamodb.Table('COMPANY_DATA')

    response = table.scan()
    items = response['Items']
    while 'LastEvaluatedKey' in response:
        response = table.scan(ExclusiveStartKey=response['LastEvaluatedKey'])
        items.extend(response['Items'])

    for item in items:
        current_status = item.get('ownership_status')

        if current_status == '0':
            new_status = 'A'
        elif current_status == '1':
            new_status = 'B'
        else:
            new_status = 'C'
        
        table.update_item(
            Key={'id': item['id']},  
            UpdateExpression='SET ownership_status = :new_status',
            ExpressionAttributeValues={':new_status': new_status}
        )
        
        print(f"Updated item {item['id']}: {current_status} -> {new_status}")


# Same thing using boto3-PartiQL
import boto3
def update_partiql():
    dynamodb = boto3.client('dynamodb')
    
    response = dynamodb.scan(TableName='COMPANY_DATA')
    items = response['Items']
    
    for item in items:
        key_value = item['id']['S']  
        
        # Update using PartiQL
        dynamodb.execute_statement(
            Statement="""
                UPDATE "COMPANY_DATA" 
                SET ownership_status = CASE 
                    WHEN ownership_status = '0' THEN 'A'
                    WHEN ownership_status = '1' THEN 'B'
                    ELSE 'C'
                END
                WHERE id = ?
            """,
            Parameters=[{'S': key_value}]
        )

update_with_partiql()
