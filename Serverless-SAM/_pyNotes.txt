
https://www.youtube.com/watch?v=52W3Qyg242Y
https://github.com/squidfunk/mkdocs-material
https://github.com/ran-isenberg/aws-lambda-handler-cookbook/blob/main/app.py

where | which python/pip
python --version
python3 -m venv venv
source venv/bin/activate
pip list | freeze
pip install --target ./package requests
pip install python-dotenv
pip install ruff
pip install boto3 + botocore
pip install aws_lambda_powertools
pip install requests-aws4auth
pip freeze > requirements.txt
pip install -r requirements.txt
precommit install
deactivate

pip install poetry
poetry config virtualenvs.in-project true
poetry new myproject (for existing projects: poetry init -> creates pyproject.toml + poetry.lock) 
poetry install (also creates venv)
poetry env info -p
poetry env list
poetry env remove {env}
poetry env use {pythonInstallationDir}
poetry shell / exit / deactivate / activate
poetry run (runs from env)
poetry lock (locks dependencies in pyproject.toml)
poetry add "aws-lambda-powertools[aws-sdk]" --group dev 
poetry add boto3 --group dev
poetry add botocore -G dev
poetry add requests
poetry update | requests 
poetry remove requests
poetry show --tree
poetry check
poetry build (for dist & wheel)
poetry publish (to pypi.org)

# https://python-poetry.org/docs/cli/#export
poetry export (--only|--with|without dev) --without-hashes -f requirements.txt -o requirements.txt

pip install -e .
pip install -e .[dev]

pip install pip-tools
pip-compile -o requirements.txt pyproject.toml (requirements.txt -> pyproject.toml w/ pinned versions)



