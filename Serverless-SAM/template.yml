AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Event handler API Gateway

# https://docs.powertools.aws.dev/lambda/python/2.23.0/core/event_handler/api_gateway/#event-resolvers
# https://aws.amazon.com/pt/blogs/opensource/create-restful-apis-on-aws-with-openapi-specification-with-no-coding/

# Parameters:
#   environment:
#     Type: "String"
#     Default: dev
#   ipAddressWhiteList:
#     Type: "CommaDelimitedList"
#     Default: "myIpAddress/32"

Globals:
  Api:
    Cors:
      AllowOrigin: "'https://example.com'"
      AllowHeaders: "'Content-Type,Authorization,X-Amz-Date'"
      MaxAge: "'300'"
    AlwaysDeploy: true
    #Auth:
    #Domain: 
    #TracingEnabled: false
    #AccessLogSetting: 
    #CanarySetting:
    #OpenApiVersion: 3.0.3 
    #CacheClusterEnabled: false
    #CacheClusterSize: 
    #BinaryMediaTypes: # see Binary responses section
    #  - "*~1*" # converts to */* for any binary type
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.12
    #Tracing: Active
    Environment:
      Variables:
        POWERTOOLS_LOG_LEVEL: INFO
        POWERTOOLS_SERVICE_NAME: service1
        POWERTOOLS_TRACE_DISABLED: true
        #POWERTOOLS_TRACER_CAPTURE_RESPONSE: false
        #POWERTOOLS_TRACER_CAPTURE_ERROR: false
        POWERTOOLS_LOGGER_LOG_EVENT: false
        #POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
        POWERTOOLS_METRICS_NAMESPACE: service1metrics
        #POWERTOOLS_PARAMETERS_MAX_AGE: 60 #seconds
        #POWERTOOLS_PARAMETERS_SSM_DECRYPT: true
        #POWERTOOLS_DEV: false
    Layers:
      # Find the latest Layer version in the official documentation
      # https://docs.powertools.aws.dev/lambda/python/latest/#lambda-layer
      - !Sub arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV2:53

Resources:
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: apigw_handler.handler
      CodeUri: lambdas/
      Description: API handler function
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoDBTable1
      AutoPublishAlias: live
      # https://aws.amazon.com/blogs/compute/introducing-advanced-logging-controls-for-aws-lambda-functions/?s=08
      # Policies:
      #     Statement:
      #       - Sid: CloudWatchLogGroup
      #         Action: 
      #           - logs:CreateLogStream
      #           - logs:PutLogEvents
      #         Resource: !GetAtt CloudWatchLogGroup.Arn
      #         Effect: Allow
      # LoggingConfig:
      #   LogFormat: JSON 
      #   ApplicationLogLevel: DEBUG 
      #   SystemLogLevel: INFO 
      #   LogGroup: !Ref CloudWatchLogGroup 
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html
      # DeploymentPreference:
      #   Type: Canary10Percent10Minutes 
      #   Alarms:
      #     - !Ref AliasErrorMetricGreaterThanZeroAlarm
      #     - !Ref LatestVersionErrorMetricGreaterThanZeroAlarm
      #   Hooks:
      #     # Validation Lambda functions that are run before & after traffic shifting
      #     PreTraffic: !Ref PreTrafficLambdaFunction
      #     PostTraffic: !Ref PostTrafficLambdaFunction
      Events:
        AnyApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+} # Send requests on any path to the lambda function
            Method: ANY # Send requests using any http method to the lambda function
            # GetAllTodos:
            #   Type: Api
            #   Properties:
            #     Path: /todos
            #     Method: GET
            # GetTodoById:
            #   Type: Api
            #   Properties:
            #     Path: /todos/{todo_id}
            #     Method: GET
            # CreateTodo:
            #   Type: Api
            #   Properties:
            #     Path: /todos
            #     Method: POST
      #Policies: AmazonDynamoDBReadOnlyAccess  
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBTable1

    Connectors:
      DynamoDBConn:
        Properties: 
          Destination:
            Id: DynamoDBTable1
          Permissions:
              - Write
          #SourceReference: SourceReference

  DynamoDBTable1:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: sam-table1
      #PointInTimeRecoverySpecification:
      #  PointInTimeRecoveryEnabled: True
      #DeletionProtectionEnabled: True
      #ContributorInsightsSpecification: 
      #  Enabled: True
      #ProvisionedThroughput: 
      #  ReadCapacityUnits: 10
      #  WriteCapacityUnits: 5
      #SSESpecification: 
      #  SSEEnabled: True
      AttributeDefinitions: 
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: N
      KeySchema: 
        - AttributeName: PK
          KeyType: HASH 
        - AttributeName: SK
          KeyType: RANGE
      # StreamSpecification:
      #   StreamViewType: NEW_IMAGE
