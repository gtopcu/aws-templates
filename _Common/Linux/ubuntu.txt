
Debian -> Ubuntu

docker run -it ubuntu bash

export PATH=$PATH:/usr/local/go/bin
ll == ls -al
sudo chown -R <user-name> <directory-name>
/var/log 
/etc/hosts 

which sudo
su -

https://askubuntu.com/questions/222348/what-does-sudo-apt-get-update-do/222352#222352
sudo apt --help
sudo apt list --installed
sudo apt list --upgradable
sudo add-apt-repository ppa:vbernat/haproxy-2.6 -> /etc/apt/sources.list

sudo apt update -y
sudo apt install --no-install-recommends foo
sudo apt update && sudo apt upgrade -y
sudo apt update && sudo apt install foo bar -y
sudo apt update && sudo apt dist-upgrade foo bar -y
sudo service ssh --status --status-all --enable --disable --start --full-restart --stop
sudo apt install systemd -> Install systemd and the systemctl utility
sudo systemctl enable disable status start stop restart --now ssh

------------------------------------------------------------------------------------------------
Install Python3 + pip + venv
------------------------------------------------------------------------------------------------
sudo apt update -y
sudo apt install python3 python3-pip python3-venv -y

mkdir my_project
cd my_project
python3 -m venv venv
source venv/bin/activate

------------------------------------------------------------------------------------------------
Install OpenSSH - enabled after Ubuntu 18
https://www.youtube.com/watch?v=6vTcH_kMrhU
------------------------------------------------------------------------------------------------
sudo apt update -y && sudo apt upgrade -y
sudo apt install -y openssh-server
sudo service status ssh
sudo service start ssh
sudo service enable --now ssh
sudo service disable --now ssh
sudo ss -tunlp | grep ssh
ssh ubuntu@10.0.0.0
ssh root@10.0.0.0

sudo /etc/init.d/sshd start
sudo passwd root -> generate password for root

chmod 400 keypair.pem
ssh -i keypair.pem username@ip_address

ssh-keygen
ssh-copy-id -> to copy public key to the server ~/.ssh

~/.ssh/authorized_keys
~/.ssh/id_rsa.pub
~/.ssh/id_rsa

cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
cat ~/.ssh/id_rsa.pub | ssh username@remote_host "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"
sudo nano /etc/ssh/sshd_config
PasswordAuthentication no

------------------------------------------------------------------------------------------------
Install UFW
------------------------------------------------------------------------------------------------
sudo apt install --no-install-recommends ufw
sudo ufw allow ssh
sudo ufw allow ssh
sudo ufw deny 22/tcp
sudo ufw enable 
sudo ufw disable

------------------------------------------------------------------------------------------------
Install HAProxy
https://www.youtube.com/watch?v=KJUVzg0fdnQ
https://sistemdostu.com/haproxy-nedir-nasil-kurulur
------------------------------------------------------------------------------------------------
sudo apt install --no-install-recommends software-properties-common
add-apt-repository ppa:vbernat/haproxy-2.6
apt install haproxy-2.6.\*
sudo service status | enable haproxy
nano /etc/haproxy/haproxy.cfg
service restart haproxy
sudo haproxy -f /etc/haproxy/haproxy.cfg - without restart

------------------------------------------------------------------------------------------------
Install SSL Cert from Let's Encrypt & Certbot
https://www.youtube.com/watch?v=KJUVzg0fdnQ
https://sistemdostu.com/haproxy-nedir-nasil-kurulur
------------------------------------------------------------------------------------------------

1. Install Certbot, the Let's Encrypt client:
   sudo apt update
   sudo apt install certbot

2. Obtain an SSL certificate using Certbot:
   sudo certbot certonly --manual
   This will walk you through the process of obtaining a certificate. 
   You'll need to follow the instructions provided, which may involve creating DNS records or placing 
   a file on your web server.

3. Once you have the certificate, you can configure your web server to use it. 
   
   For Apache, edit the Apache configuration file (usually /etc/apache2/sites-available/your_domain.conf) 
   and add the following lines:
   SSLCertificateFile /etc/letsencrypt/live/your_domain/fullchain.pem
   SSLCertificateKeyFile /etc/letsencrypt/live/your_domain/privkey.pem

   For Nginx, edit the Nginx configuration file (usually /etc/nginx/sites-available/your_domain) and add the following lines:
   ssl_certificate /etc/letsencrypt/live/your_domain/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/your_domain/privkey.pem;

