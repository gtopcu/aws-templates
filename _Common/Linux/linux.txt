
Choosing the Right Linux Distribution | Pros & Cons of the Top 7 Server Distros
https://www.youtube.com/watch?v=b5XqwNrOWK0

Linux Commands:
https://www.xmind.net/m/WwtB/#

echo $PATH
export PATH=$PATH:/usr/local/go/bin

/var/log
/var/log/auth.log
/etc/hosts
/etc/sudoers.d/
/etc/apt/sources.list
/etc/os-release 
/etc/passwd            -> Users
/etc/group             -> Groups

chmod u+rwx keypair.pem
chmod 400 ~/ssh/mypair.pem 
ssh -i ~/ssh/mypair.pem ec2-user@192.168.1.1
.aws /etc/hosts, var/log

curl api.ipify.org
find . -name "*.pdf" -type f -exec rm {} \;
sudo rm -rf /*
ls -a | grep -i Doc

**************************** Cron ****************************

https://crontab.guru/
*	any value
,	value list separator
-	range of values
/	step values

min hour day month day of week 
48 5 1-6 1,12 0,3   : 05:48AM every Sunday & Wednesday on 1th & 6th of January & December 
*/2 * * * *         : Every second minute - 00:00, 00:02, etc
*/30 * * * *        : Every 30 minutes - 00:00, 00:30, etc

crontab –l
crontab –e
crontab –u other_username –e
* 2 0 * 4 /root/backup.sh
(crontab -l ; echo "*/1 * * * * if (( $(uptime | tail -c 5 | cut -d. -f1  ) < 10 )); then sudo shutdown fi") 2>&1 | grep -v "no crontab" | sort | uniq | crontab -

**************************** General ****************************

sudo !! - execute previous command with sudo
sudo su - execute all with sudo
clear
history
pwd
printenv
ls -l -a -s
ls -a | grep -i Doc
ls -ltr pythonX-bash.py
du -a /dir | sort -n -r | head -n 20   -> 20 largest files ascending
man <command>
cd ..
cd ~ (go to /root)
cd / (go to root)
mkdir <dirname>
rmdir <dirname>
rm <file>
rm chunk* (all files starting with chunk)
rm -r <dirname> 
mv <source> <target>
cp <source> <target>
cp -r ./Green ./White
cp/COPY --chown=www-data . . 
ln -s ./Downloads/exec.sh 
find conten*

chown -R hukanege /Users/hukanege/.aws/ (recursive for dir)
chown -R www-data /tmp

chmod a+rx <filename>
chmod ug+x <filename>
chmod u-x <filename>
chmod u+rw <filename>
chmod +x  <dir      :   Allow cd on dir 
chmod 777 -R <dir   :   Recursive
chmod 777 <filename>:   Set rwx for owner, group, world
chmod 755 <filename>:   Set rwx for owner, rx for group, x for world
chmod 600 <filename>:   Set rwx for owner, no other user can access the file
chmod 644 <filename>:   Set rwx for owner, r for group members and other users on the system
chmod 400 <filename>:   Allow read by owner
chmod 200 <filename>:   Allow write by owner
chmod 100 <filename>:   For files, allow execution by owner
                        For directories, allow the owner to search in the directory
chmod 040 <filename>:   Allow read by group members

umask: default roles for new files
inode: data structure holding file data, has integer number, holds file size, UID, bin data ref etc

**************************** GREP ****************************

https://www.cyberciti.biz/faq/howto-use-grep-command-in-linux-unix/
-i: ignore case
-r: recursive, for directory scan
-c: total count of occurence

grep "for" bash0.sh
grep -i "FOR" bash0.sh
zgrep "for" bash0.sh.gzip
grep -r "$" .
grep -r -c "$" .
grep -r -h "$" .
cat /etc/passwd | grep -i "boo"


**************************** System ****************************

uname -a : System Info
uname -r
uptime
last reboot
date
cal
id
last
w
who
finger user
hostname
hostname -i
hostnamectl set-hostname k8s-control
du: file sizes, du -sh: total size
lsblk: list disks, / means root disk
df -h : free disk space
df -T : filesystem type of your partitions
growpart /dev/nvme0n1 1

free -m : free memory
top: CPU usage
htop: system monitor (sudo yum install htop -y)
vm stat
echo "CPU Usage: "$[100-$(vmstat 1 2|tail -1|awk '{print $15}')]"%"
ps aux: running apps
kill <pid>
cat /proc/cpuinfo |grep core
shutdown -h now
sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

************************** Variables & Env. Variables ****************************

Variables
* VARIABLE=123456, ref by $VARIABLE

PATH
$ echo $PATH
$ which node
$ export PATH=$PATH:/usr/local/nodejs/bin
$ export GT_ENV_CODE=991453

ENV
* printenv  – Print all or part of environment
* env       – Display all exported environment or run a program in a modified environment
* set       – List the name and value of each shell variable.

To make an environment persistent for a user's environment, export the variable from the user's profile script.
1. Open the current user's profile into a text editor:
$ vi ~/.bash_profile.
2. Add the export command for every environment variable you want to persist 
$ export JAVA_HOME=/opt/openjdk11.
Save your changes.

***************************** Files ****************************

touch <filename.txt>
nano <filename.txt>
vi <filename.txt> (YY, P, U, :(w)q!)
cat <filename.txt>
cat hash1 hash2 > hash12
tail -f <filename.txt> (-n / --lines, -c / --bytes)
more <filename.txt>
apt/yum/dnf install xclip

Create large file
dd if=/dev/urandom of=largefile bs=3145728 count=1 (create large file)

************************** Tar/Zip ***************************

sudo installer -pkg AWSCLIV2.pkg -target /

zip -rq dist-latest.zip src package.json 
zip -r9 ../deployment_package.zip .
zip -g deployment_package.zip lambda_function.py
zipinfo dist-latest.zip
unzip filename.zip
tar -xzf filename.tar.gz
tar -xf zipped.tar
tar -cf zipped.tar picture.png
tar -cf zippeddir.tar directory 
tar -czf zipped.tar.gz picture.png
tar -tf zipped.tar: list contents
gzip filename.tar: gzip & rename to filename.tar.gz 

struct timespec st_atim;  /* time of last access */
struct timespec st_mtim;  /* time of last modification */
struct timespec st_ctim;  /* time of last status change */

********************** Amazon Linux 2 *************************
--Amzn Linux2
yum update -y
yum install httpd -y
service httpd start
chkconfig httpd on
chmod 400 ~/ssh/mypair.pem 
ssh -i ~/ssh/mypair.pem ec2-user@ip

********************** Amazon Linux 2023 *************************
https://aws.amazon.com/blogs/compute/python-3-12-runtime-now-available-in-aws-lambda/
https://www.youtube.com/watch?v=VRqazCsTbZk
AWS CLI, SELinux, IMDs v2, CW/SystemsMgr/Inspector agents, Perl/Python/Ruby/Java
rpm -q system-release
dnf upgrade/update -y (replaces yum)
dnf upgrade --releasever=2023.2.20231030 (locks system to specific version)
dnf check-update --releasever=latest --security
microdnf update -y
curl-minimal
gnupg2-minimal
dnf install node

**************************** Network ****************************

sudo sysctl network restart
netstat -all
netstat -an | grep ":8080 " | grep ESTABLISHED | wc -l
total_conn=$(netstat -an | grep <port> | wc -l) 
netstat -tupl
netstat -r
whatis ip
cat /etc/resolv.conf -> DNS config
ip a
ip route show
ip addr
ip addr show -> list network interfaces
ip address add 192.0.0.1 dev eth0
ping 127.0.0.1
nc 54.78.7.114 22
ssh -vT git@github.com
nslookup google.com
dig google.com
dig -x google.com: reverse lookup
host google.com: list nameservers
whois google.com
ethtool eth0
telnet 54.78.7.114:22
ipconfig -a

wget <link>
curl 54.78.7.114:22
curl "https://awscli.amazonaws.com/AWSCLIV2.pkg" -o "AWSCLIV2.pkg"
curl --create-dirs "https://packages.sury.org/php/apt.gpg" -o "/etc/apk/trusted.gpg.d/php.gpg"

curl -X GET http://api.com/customers/1000
curl -X POST -H "Content-Type: application/json" -d '{ "username":"gokhan", "age":36 }' http://api.com/customers
curl -X DELETE http://api.com/customers/1000

curl -v google.com (GET & show response)
curl -v -X POST google.com -F "user='<script><alert>Alert me</alert></script>'" (CSS attack)
curl -v -X POST google.com -F "user='AND 1=1'" (SQL Injection attack)
curl -d '{}' https://o55ybz0sc5.execute-api.us-east-1.amazonaws.com/v1/graphql (Post with data)

curl -X POST --data @aws-auth-data.json \
-H 'X-Amz-Target: AWSCognitoIdentityProviderService.InitiateAuth' \
-H 'Content-Type: application/x-amz-json-1.1' \
https://cognito-idp.us-east-2.amazonaws.com/

curl --request GET \
  --url https://izb9erxhx4.execute-api.us-east-2.amazonaws.com/00_infraops_donotdelete \
  --header 'Authorization: Bearer eyJraWQiOiJhR0F1aDdraVNzMEt5XC9YeHp1VXN6eGgrSEZ0WkZ1SHFLQXBWdlkxOUU1ND0iLCJhbGciOiJSUzI1NiJ9.eyJvcmlnaW5fanRpIjoiNDVhMTA5MDgtYzgxYi00NTlmLTlmYjQtY2Y5NGY2YTkyYzRkIiwic3ViIjoiYmMxMDU5NWQtZGQ4Ni00ZGIwLTkzODQtM2MxM2M5NDEzMTgwIiwiZXZlbnRfaWQiOiI3ZGFhYTIwMy00MDNhLTRjZjEtYTVhNS1mZDFlMjdhMWVjMjEiLCJ0b2tlbl91c2UiOiJhY2Nlc3MiLCJzY29wZSI6ImF3cy5jb2duaXRvLnNpZ25pbi51c2VyLmFkbWluIiwiYXV0aF90aW1lIjoxNjQ4MDM1OTQ2LCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0yLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMl9RdHI0TjF5VnciLCJleHAiOjE2NDgwNzE5NDYsImlhdCI6MTY0ODAzNTk0NiwianRpIjoiMzI1OGZjM2ItOWU0Ny00YWI2LThkOTUtZjNiMzgxOTRiNTMxIiwiY2xpZW50X2lkIjoiNm1uOXJlMXZtazRrYTJvNGwzMXJ1anE4N2giLCJ1c2VybmFtZSI6ImJjMTA1OTVkLWRkODYtNGRiMC05Mzg0LTNjMTNjOTQxMzE4MCJ9.YKGjnFbegY2Y92WN3WfiR_O5k9RCn5dJJpf-FJj6m6MyVhVQD-rFjWx46ks8D8hYmf21wGbwraN16n4Q44aZ0QRtdsF1Br8t9J7vtONRWUVsRnN1mqvmbIEz4XiYNkC9zZfSealFtpDu95Ri382tJX8QJ5EIzrFYxfo1HDLAjvfaZnmxJxNSTdAvpeVoXBDOgo-HEBvd_HHzkvHDR0rv-mXEc1rydqH2zW0i9J0Wgfrb-YthqZaO0EO_qwCmwU1qs0Wn4-Sw2_wSftX4R1kEQ3smUpMUfFwy3Y0iTOFT5gJcUMfijkq4lhFJK0jg9dq9op8ZbT1GPvfMJnoAPG8LSQ'

curl https://izb9erxhx4.execute-api.us-east-2.amazonaws.com/00_infraops_donotdelete
CSS attack:
curl -v POST https://izb9erxhx4.execute-api.us-east-2.amazonaws.com/00_infraops_donotdelete -F "user='<script><alert>Alert me</alert></script>'"
SQL Injection attack:
curl -v POST https://izb9erxhx4.execute-api.us-east-2.amazonaws.com/00_infraops_donotdelete -F "user='AND 1=1'" 

nano /var/logs 
sudo nano /etc/hosts
sudo nano /etc/route.conf -> DNS config

vi (w):q!

----------------------------------------------------------------
Install UFW firewall
----------------------------------------------------------------
sudo apt install -y ufw
By default, UFW is set to block all incoming connections
sudo ufw allow ssh
sudo ufw allow http
sudo ufw allow https
sudo ufw deny 22/tcp
sudo ufw enable | disable


**************************** Other ****************************

#HardLink - only for files in the same fileystem
ln ~/bin/topprocs.sh tp
ln /Users/hukanege/Downloads/macKeyboard.png macKeysHard.png

#SymbolicLink - a link to any file/directory
ln -s ~/bin/topprocs.sh tps.sh 
ln -s /Users/hukanege/Downloads/macKeyboard.png macKeysSymb

**************************** Other ****************************

##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1       localhost
255.255.255.255 broadcasthost
::1             localhost
# Added by Docker Desktop
# To allow the same kube context to work on the host and the container:
127.0.0.1 kubernetes.docker.internal
# End of section

**************************** Network ****************************

 
1. ifconfig
 - Display network interface information.
Ifconfig
2. ip
 - Show/manipulate routing, devices, policy routing, and tunnels.
ip address show
3. route
 - Display or manipulate the IP routing table.
route -n
4. ping
 - Send ICMP ECHO_REQUEST to network hosts.
ping google.com
5. traceroute
 - Print the route packets trace to network host.
traceroute google.com
6. netstat
 - Print network connections, routing tables, interface statistics, masquerade connections, 
 and multicast memberships.
netstat -an
7. ss
 - Display socket statistics.
ss -tulpn
8. hostname
 - Show or set the system's host name.
Hostname
9. dig
 - DNS lookup utility.
dig google.com
10. nslookup
 - Query Internet name servers interactively.
nslookup google.com
11. route
 - Manipulate routing tables.
route add default gw 192.168.1.1
12. iptables
 - Administration tool for IPv4 packet filtering and NAT.
iptables -L
13. tcpdump
 - Dump traffic on a network.
tcpdump -i eth0
14. sshd
 - OpenSSH daemon.
service sshd restart
15. telnet
 - User interface to the TELNET protocol.
telnet google.com 80
16. scp
 - Secure copy (remote file copy program).
scp file.txt user@remote:/path/to/destination
17. wget
 - Non-interactive network downloader.
wget http://example.com/file.zip
18. curl
 - Command line tool for transferring data with URL syntax.
curl http://example.com/api
19. iptraf
 - Interactive color IP LAN monitor.
Iptraf
20. iftop
 - Display bandwidth usage on an interface.
Iftop
21. nmap
 - Network exploration tool and security scanner.
nmap -sP 192.168.1.0/24
22. lsof
 - List open files.
lsof -i :80
23. ethtool
 - Display or change ethernet card settings. 
ethtool eth0
24. arp
 - Display or modify the ARP cache.
arp -a
25. route
 - Display or modify the IP routing table.
Route
26. ss
 - Display socket statistics.
ss -s
27. hostnamectl
 - Control the system hostname and related settings.
hostnamectl status
28. resolvconf
 - Manage DNS information.
resolvconf -u
29. mtr
 - Network diagnostic tool.
mtr google.com
30. iwconfig
 - Configure a wireless network interface.
Iwconfig
31. nc
 - Arbitrary TCP and UDP connections and listens.
nc -l 8080
32. scp
 - Copy files between hosts on a network.
scp file.txt user@host:/path/to/destination
33. ssh-keygen
 - Generate, manage, and convert authentication keys
for ssh.
ssh-keygen -t rsa
34. ss
 - Show socket statistics.
ss -t -a
35. tcpdump
 - Capture and display packets on a network.
tcpdump -i eth0 tcp port 80
36. route
 - Add a new route.
route add -net 192.168.2.0 netmask 255.255.255.0 gw 192.168.1.1
37. nmcli
 - Command-line client for NetworkManager.
nmcli connection show
38. dig
 - Perform DNS lookups.
dig +short A google.com
39. nload
 - Visual representation of incoming and outgoing traffic.
Nload
40. iperf
 - Tool for measuring TCP and UDP bandwidth
performance.
iperf -c server_ip
41. fping
 - Quickly ping multiple hosts.
fping -a -g 192.168.1.1 192.168.1.254
42. iftop
 - Real-time console-based network bandwidth monitoring tool.
iftop -n
43. route
 - Delete a route.
route del -net 192.168.2.0 netmask
255.255.255.0
44. tcpdump
 - Capture and display packets in ASCII.
tcpdump -A -i eth0
45. netcat
 - Utility for reading from and writing to network connections.
nc -zv 192.168.1.1 22
46. nmtui
 - Text User Interface for controlling NetworkManager.
Nmtui
47. ethtool
 - Change the speed/duplex settings of an Ethernet device.
ethtool -s eth0 speed 100 duplex full
48. ss
 - Show listening sockets.
ss -l
49. host
 - DNS lookup utility.
host google.com
50. nmcli
 - List available Wi-Fi networks.
nmcli device wifi list
