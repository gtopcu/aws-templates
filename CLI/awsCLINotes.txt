
------------------------------------------------------------------------------------
SSH Connection:
------------------------------------------------------------------------------------
chmod 400 gt-key.pem
ssh -i "gt-key.pem" ec2-user@54.78.7.114

------------------------------------------------------------------------------------
Install CLI 
------------------------------------------------------------------------------------
https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
curl "https://awscli.amazonaws.com/AWSCLIV2.pkg" -o "AWSCLIV2.pkg"
sudo installer -pkg AWSCLIV2.pkg -target /

CLI Doc:
https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html
https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html

CLI Skeleton:
https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-skeleton.html

sudo chown -R hukanege /Users/hukanege/.aws/
/.aws/credentials
/.aws/config
(C:\Users\USER_NAME\.aws\)

$ mkdir ~/.aws
$ cat >> ~/.aws/config
[default]
aws_access_key_id=YOUR_ACCESS_KEY_HERE
aws_secret_access_key=YOUR_SECRET_ACCESS_KEY
region=YOUR_REGION (such as us-west-2, us-west-1, etc)


apt install awscli

aws configure
aws configure [--profile profile-name]
aws configure list
aws configure list-profiles
aws configure set region us-east-2 --profile spiky
aws configure import --csv file://credentials.csv
aws iam get-user
which aws

------------------------------------------------------------------------------------
DynamoDB:
https://docs.aws.amazon.com/cli/latest/reference/dynamodb/index.html#cli-aws-dynamodb
------------------------------------------------------------------------------------

aws dynamodb list-tables \
    --profile spiky \
    --generate-cli-skeleton input > tables.json 

aws dynamodb describe-continuous-backups \
    --table-name Blog-gkyef3d5qrfxfcoyt76zuf7n4i-dev \
    --profile spiky

aws dynamodb update-continuous-backups \
    --table-name Blog-gkyef3d5qrfxfcoyt76zuf7n4i-dev \
    --point-in-time-recovery-specification PointInTimeRecoveryEnabled=true \
    --profile spiky

aws dynamodb update-continuous-backups \
    --generate-cli-skeleton input > tablesSkeleton.json

aws dynamodb update-continuous-backups \
    --profile spiky \
    --cli-input-json file://tables.json


------------------------------------------------------------------------------------
S3:
https://docs.aws.amazon.com/cli/latest/userguide/cli-services-s3-commands.html
------------------------------------------------------------------------------------

aws s3 ls
aws s3 mb s3://gokhantopcu-clitest
aws s3 rb s3://gokhantopcu-clitest
aws s3 cp <file> s3://<s3path>
aws s3 cp s3://gokhantopcu .
aws s3 sync <dir> s3://<s3path>

BUCKET = gokhantopcu
PREFIX = myfiles
aws s3 sync . s3://$BUCKET/$PREFIX/
aws s3 sync --exclude="*" --include="[0-9]*.jpg" . s3://$BUCKET/$PREFIX/ 

aws s3 sync --delete <dir> s3://<s3path>
aws s3api list-objects --bucket <YOUR_BUCKET_NAME> --page-size 5 (default: 1000)
aws s3api list-objects --bucket <YOUR_BUCKET_NAME> --max-items 1
aws s3api put-bucket-versioning --bucket DOC-EXAMPLE-BUCKET1 &&
    --versioning-configuration Status=Enabled,MFADelete=Enabled --mfa "SERIAL 123456"


------------------------------------------------------------------------------------
EC2:
https://docs.aws.amazon.com/cli/latest/userguide/cli-services-ec2.html
------------------------------------------------------------------------------------

aws ec2 describe-instances
aws ec2 stop-instances --instance-ids i-0744af96f9e05dfe5
aws ec2 create-snapshot
aws ec2 run-instances --cli-input-json file://ec2runinst.json

Display EC2 user & metada:
------------------------------------------------------------
curl http://169.254.169.254/latest/user-data
curl http://169.254.169.254/latest/meta-data
curl http://169.254.169.254/latest/meta-data/local-hostname
curl http://169.254.169.254/latest/meta-data/public-ipv4
...


------------------------------------------------------------------------------------
Lambda
------------------------------------------------------------------------------------

aws lambda list-functions --function-version ALL --region <REGION> \
    --output text --query "Functions[?Runtime=='<RUNTIME>'].FunctionArn"

aws lambda invoke --function-name error-example outfile.txt    

aws lambda update-function-code --function-name pythonLambda --zip-file fileb://deployment_package.zip

aws lambda publish-layer-version --layer-name $LAYER_NAME --description "pymediainfo" \
    --content S3Bucket=$LAMBDA_LAYERS_BUCKET,S3Key=pymediainfo-python38.zip --compatible-runtimes python3.8

------------------------------------------------------------------------------------
ECS
------------------------------------------------------------------------------------
cluster_arn=$(aws ecs list-clusters | jq -r '.clusterArns[] | select(contains("container-demo"))')
clustername=$(aws ecs describe-clusters --clusters $cluster_arn | jq -r '.clusters[].clusterName')
aws ecs update-cluster-settings --cluster ${clustername}  --settings name=containerInsights,value=enabled --region ${AWS_REGION}

aws ecs list-clusters
aws ecs describe-clusters
aws ecs update-cluster-settings --cluster sddg-ecs-cluster-dev --settings name=containerInsights,value=enabled --region us-east-2 --profile spiky

------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
