
https://github.com/aws/aws-sam-cli-app-templates

AWS SAM Tutorial (with a Lambda Example!)
https://www.youtube.com/watch?v=MipjLaTp5nA

How To Test your AWS Lambda Locally with SAM
https://www.youtube.com/watch?v=AUQRyl1SNcU

Lamba Testing Remote Invoke
https://www.youtube.com/watch?v=0rhJD9rl1co

Mastering the AWS Serverless Application Model (AWS SAM) - AWS Online Tech Talks
https://www.youtube.com/watch?v=QBBewrKR1qg

AWS re:Invent 2021 - What’s new in serverless
https://www.youtube.com/watch?v=_8mbJ3PGVUk

Creating a CI/CD deployment pipeline for GitHub Actions with AWS SAM Pipelines
https://www.youtube.com/watch?v=sQrdfhGsW6w

SAM Accelerate
https://www.youtube.com/watch?v=oZNC9mLA_PM

SAM Connectors
https://www.youtube.com/watch?v=1GoShapTxH0

---------------------------------------------------------------------------------------------

Installation & Commands:
https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install-mac.html
brew --version
brew tap aws/tap
brew install aws-sam-cli
sam --version

Upgrade/Uninstall
brew upgrade aws-sam-cli
brew uninstall aws-sam-cli

!! Need to install AWS CLI, SAM CLI + Docker Desktop first & Configure AWS Credentials !!

sam -h                                      List Commands
sam init                                    Initialize SAM app
sam --config-env                            Specify the environment to use
sam validate                                Validate an AWS SAM template
sam build —-parallel --cached               Build the app (parallel/cached specified in samconfig.toml)
sam package                                 Package the app (sam deploy packages, no need)

sam deploy --guided                         Deploy the app
sam deploy -t template.yml stack-name xxx --config-file myconfig.yaml

sam delete                                  Delete an AWS SAM application and the artifacts created by sam deploy
sam logs --tail                             Fetch logs for a function
sam publish                                 Publish a packaged AWS SAM template to the AWS Serverless Application Repository
sam traces                                  Fetch AWS X-Ray traces

SAM Accelerate -> https://aws.amazon.com/blogs/compute/accelerating-serverless-development-with-aws-sam-accelerate/
sam sync --watch
sam sync --stack-name <project name> --watch
sam sync --stack-name <project name> --watch --code 
sam sync --stack-name <project name> --code --resource AWS::Serverless::Function
sam sync --stack-name <project name> --code --resource-id HelloWorldFunction
sam logs --stack-name <project name> --include-traces --tail

https://explore.skillbuilder.aws/learn/course/12836/play/51248/deploying-serverless-applications;lp=92
sam pipeline bootstrap			Creates all of the environment resources, permission, authentication
sam pipeline init				Creates the pipeline for your CI/CD system
sam pipeline init --bootstrap	Entire bootstrap and initialization process

Invoke:
sam local invoke -e ./events/lambda_event.json samFunction
sam remote invoke

Start:
sam local start-lambda
sam local start-api
sam local start-api --template-file cloudformation.yml

Generate Event
https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/using-sam-cli-local-generate-event.html
sam local generate-event apigateway aws-proxy >> apigw-proxy.json 
sam local generate-event apigateway sqs receive-message/s3 put/sns notification

---------------------------------------------------------------------------------------------

1) Create an S3 bucket: 
aws s3 mb s3://gtopcu-dev-sam-demo --region eu-west-1  

2) Package your deployment: 
sam package \
--template-file ./lambda.yml \
--output-template-file sam-template.yml \
--s3-bucket gtopcu-dev-sam-demo
#use the bucket name you used in the previous step

3) Deploy your package: 
sam deploy \
--template-file sam-template.yml \
--stack-name samdemostack \
--capabilities CAPABILITY_IAM