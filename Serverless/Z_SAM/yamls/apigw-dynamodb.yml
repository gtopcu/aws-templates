AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Event handler API Gateway with DynamoDB

# https://docs.powertools.aws.dev/lambda/python/2.23.0/core/event_handler/api_gateway/#event-resolvers
# https://aws.amazon.com/pt/blogs/opensource/create-restful-apis-on-aws-with-openapi-specification-with-no-coding/

Parameters:
  environment:
    Type: "String"
    Default: dev
    AllowedValues:
      - dev
      - prod
  ddb_tablename: 
    Type: "String"
    Default: sam-table1
    # '{{resolve:ssm-secure:IAMUserPassword:10}}'
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html

Resources:
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: apigw_handler.handler
      CodeUri: lambdas/
      Description: API handler function
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      Environment:
        Variables:
          DDB_TABLE_NAME: !Ref DynamoDBTable1 #!Sub "{ddb_tablename}"
      AutoPublishAlias: live
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html
      # DeploymentPreference:
      #   Type: Canary10Percent10Minutes 
      #   Alarms:
      #     - !Ref AliasErrorMetricGreaterThanZeroAlarm
      #     - !Ref LatestVersionErrorMetricGreaterThanZeroAlarm
      #   Hooks:
      #     # Validation Lambda functions that are run before & after traffic shifting
      #     PreTraffic: !Ref PreTrafficLambdaFunction
      #     PostTraffic: !Ref PostTrafficLambdaFunction
      Events:
        AnyApiEvent:
          Type: Api
          StageName: !Sub "${environment}"
          Properties:
            Path: /{proxy+} # Send requests on any path to the lambda function
            Method: ANY # Send requests using any http method to the lambda function
            # getAllTodos:
            #   Type: Api
            #   Properties:
            #     Path: /todos
            #     Method: GET
            # getTodoById:
            #   Type: Api
            #   Properties:
            #     Path: /todos/{todo_id}
            #     Method: GET
            # createTodo:
            #   Type: Api
            #   Properties:
            #     Path: /todos
            #     Method: POST

            # getAllTodos:
            #   Type: HttpApi
            #   Properties:
            #     Path: /todos
            #     Method: GET
            # getTodoById:
            #   Type: HttpApi
            #   Properties:
            #     Path: /todos/{todo_id}
            #     Method: GET
            # createTodo:
            #   Type: HttpApi
            #   Properties:
            #     Path: /todos
            #     Method: POST
    Policies:
      - DynamoDBReadPolicy:
          TableName: !Ref DynamoDBTable1
    # Connectors:
    #   DynamoDBConn:
    #     Properties: 
    #       Destination:
    #         Id: DynamoDBTable1
    #       Permissions:
    #           - Write
          #SourceReference: SourceReference

  DynamoDBTable1:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain #RetainExceptOnCreate/Retain/Snapshot/Delete
    UpdateReplacePolicy: Retain
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html
    Properties:
      TableName: !Sub "{ddb_tablename}"
      # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html
      AttributeDefinitions: 
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: N
      KeySchema: 
        - AttributeName: PK
          KeyType: HASH 
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      # BillingMode: PROVISIONED
      # ProvisionedThroughput: 
      #   ReadCapacityUnits: 10
      #   WriteCapacityUnits: 5
      # StreamSpecification:
      #    StreamViewType: KEYS_ONLY/NEW_IMAGE/OLD_IMAGE/NEW_AND_OLD_IMAGES
      # PointInTimeRecoverySpecification:
      #  PointInTimeRecoveryEnabled: True
      # DeletionProtectionEnabled: True
      # ContributorInsightsSpecification: 
      #   Enabled: True
      # SSESpecification: 
      #   SSEEnabled: True

Outputs:
  ApiGatewayEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${apiGateway}.execute-api.${AWS::Region}.amazonaws.com/${environment}