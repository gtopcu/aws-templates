
https://github.com/aws/aws-cdk
https://docs.aws.amazon.com/cdk/v2/guide/home.html
https://docs.aws.amazon.com/cdk/api/v2/docs/aws-construct-library.html
https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-cdk-testing.html
https://www.youtube.com/watch?v=_kf4ajni3Qk

CDK Constructs Python v2:
https://docs.aws.amazon.com/cdk/api/v2/python/
https://constructs.dev/

Solution Constructs:
https://docs.aws.amazon.com/solutions/latest/constructs/welcome.html


brew install node@22
brew uninstall node
node -v 
npm -v
brew unlink node
brew link --overwrite --force node@22

npm install -g aws-cdk             # install latest version
npm install -g aws-cdk@8.4.0       # install specific version

# python -m pip install aws-cdk-lib

# export CDK_DEFAULT_ACCOUNT=12312312321
# export CDK_DEFAULT_REGION=us-east-2

cdk bootstrap aws://102224384400/us-east-2

cdk --version
cdk bootstrap -> Deploys the CDK Toolkit staging stack; see Bootstrapping
cdk init -> Creates a new CDK project/lib in the current directory from a specified template
cdk init app --language python
cdk ls -> Lists the stacks in the app
cdk synth -> Synthesizes and prints the CloudFormation template for the specified stack(s)
cdk diff -> Compares the specified stack with the deployed stack or a local CloudFormation template
cdk deploy (-all) -> Deploys the specified stack(s)
cdk deploy "Dev/*"
cdk deploy --hotswap -> Will try hotswap deployment first
cdk deploy --no-rollback -> will not rollback a failed deployment by default
cdk rollback -> used if deployed with --no-rollback
cdk watch -> Watch for changes
cdk destroy -> Destroys the specified stack(s)
cdk metadata -> Displays metadata about the specified stack
cdk gc      -> Garbage collection
cdk docs (doc) -> Opens the CDK API reference in your browser
cdk doctor -> Checks your CDK project for potential problems
cdk import -> Import existing resources
cdk migrate -> Migrate existing resources
cdk ack 16603 -> Acknowledge & hide CDK notices

cdk context -> Manages cached context values

--clear BOOLEAN -> Clear all context.
--force, -f BOOLEAN -> Ignore missing key error. Default value: false
--help, -h BOOLEAN -> Show command reference information for the cdk context command.
--reset, -e STRING -> The context key, or its index, to reset.


class MyEcsConstructStack(Stack):

    def __init__(self, scope: Construct, id: str, **kwargs) -> None:
        super().__init__(scope, id, **kwargs)

        vpc = ec2.Vpc(self, "MyVpc", max_azs=3)     # default is all AZs in region

        cluster = ecs.Cluster(self, "MyCluster", vpc=vpc)

        ecs_patterns.ApplicationLoadBalancedFargateService(self, "MyFargateService",
            cluster=cluster,            # Required
            cpu=512,                    # Default is 256
            desired_count=6,            # Default is 1
            task_image_options=ecs_patterns.ApplicationLoadBalancedTaskImageOptions(
                image=ecs.ContainerImage.from_registry("amazon/amazon-ecs-sample")),
            memory_limit_mib=2048,      # Default is 512
            public_load_balancer=True)  # Default is False

