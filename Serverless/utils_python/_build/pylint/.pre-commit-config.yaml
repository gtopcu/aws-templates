
# https://www.youtube.com/watch?v=xhg1dJHLqSM
# https://pre-commit.com/
# https://docs.astral.sh/uv/
# https://docs.astral.sh/uv/guides/integration/pre-commit/
# https://github.com/astral-sh/ruff-pre-commit


# Local:
# .pre-commit-config.yaml -> .git/hooks/pre-commit
# GitHub:
# .pre-commit-config.yaml -> .github/workflows/pre-commit

# pip install pre-commit
# pre-commit --version

# pre-commit install
# pre-commit installed at .git/hooks/pre-commit
# pre-commit uninstall

# pre-commit run --all-files --verbose --show-diff-on-failure
# pre-commit run <hook_name>
# pre-commit autoupdate  -> updates repos in the yaml file to the latest version
# pre-commit validate-config
# pre-commit sample-config


repos:
# - repo: https://github.com/astral-sh/uv-pre-commit
#   # uv version.
#   rev: 0.5.5
#   hooks:
#     # Compile requirements
#     - id: pip-compile
#       args: [requirements.in, -o, requirements.txt]

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v5.0.0
  hooks:
  -   id: end-of-file-fixer
  -   id: trailing-whitespace
  -   id: check-added-large-files
  -   id: check-json
  -   id: check-yaml

# - repo: https://github.com/pycqa/pylint
    # rev: v3.1.0
    # hooks:
    # -   id: pylint
    #     args: ["--rcfile=.pylintrc"]
    #     #args: ["--score=no"]
    #     additional_dependencies: ["boto3","botocore"]

- repo: https://github.com/PyCQA/isort
  rev: 5.13.2
  hooks:
    - id: isort

# - repo: https://github.com/psf/black
#   rev: 23.11.0
#   hooks:
#   -   id: black
#       args: [--safe]

# - repo: https://github.com/PyCQA/flake8
#   rev: 7.1.1
#   hooks:
#     - id: flake8
#       args: [--config=.flake8, --max-line-length=79]

- repo: https://github.com/astral-sh/ruff-pre-commit
  # Ruff version.
  rev: v0.8.4
  hooks:
    # Run the linter.
    - id: ruff
      args: [ --fix ]
    # Run the formatter.
    - id: ruff-format

# - repo: local
#   hooks:
#     - id: pytest
#       name: pytest
#       entry: ./ ./venv/bin/pytest tests
#       language: python
#       types: [python]
#       pass_filenames: true
#       always_run: true
#       verbose: true
#       stages: [commit]
#       log_file: .pre-commit-pytest.log
#       require_serial: true

# - repo: local
#   hooks:
#     - id: python-lint
#       name: python-lint
#       entry: python-lint
#       language: python
#       types: [python]
#       pass_filenames: false
#       always_run: true
#       verbose: true
#       stages: [commit]
#       log_file: .pre-commit-python-lint.log
#       require_serial: true
